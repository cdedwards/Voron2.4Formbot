


############################################# \
######## USER CONFIG OVERRIDES FILE #########  + --> This will help you personalize my config to your printer :)
############################################# /

# This file is yours! Feel free to edit it in order to include all the needed
# things to adapt my generic config to your machine. This file will not be erased
# when updating the config using moonraker and it will be kept as you've set it.
# You can change every section of the config. You can also add some new custom macros, etc...
# The corresponding documentation can be found in: docs > overrides.md

### Also, keep in mind: if you use a multi-MCU config such as the old school double SKRs or a CANbus toolhead
### board, you will need to specify which components are connected to which board in your own mcu.cfg file!
### Example: if something is connected to the toolhead MCU, you should use "config_pin: toolhead:PIN_NAME".

#> Main control MCUs are called "mcu" (and "secondary" when using a double MCU configuration)
#> Toolhead CANboard MCUs are called "toolhead"
#> ERCF MCUs are called "ercf" 

# ------------------------------------------------------------------------------------------


#-------------------------#
#   START_PRINT SEQUENCE  #
#-------------------------#

## The START_PRINT sequence is modular and fully customizable. A default START_PRINT sequence is auto-populated based on
## your probe choice (TAP, Dockable, Inductive), but if for some reasons you still want to modify it, please uncomment the following 3
## lines to define a new `variable_startprint_actions`. You can use any number of action or even duplicate some actions if needed.
## Available actions: "bed_soak", "extruder_preheating", "chamber_soak", "extruder_heating", "tilt_calib", "z_offset", "bedmesh", "purge", "clean", "primeline"
##
# [gcode_macro _USER_VARIABLES]
# variable_startprint_actions: "action1", "action2", ...
# gcode: # do not remove this line


#-------------------------#
#   EXTRUDER/BED PIDs     #
#-------------------------#

## Here is an example of some overrides for the PIDs. I put them here as almost everyone will use them,
## so just uncomment the following lines and change the values according to your own machine
[heater_bed]
control = pid
pid_kp = 45.182
pid_ki = 1.761
pid_kd = 289.733
sensor_type: Generic 3950
max_temp: 140


[tmc2209 extruder]
run_current: 0.6  
 
[extruder]
rotation_distance: 47.088
gear_ratio: 9:1
microsteps: 16

control = pid
pid_kp = 25.489
pid_ki = 3.034
pid_kd = 53.526
sensor_type: ATC Semitec 104NT-4-R025H42G
pressure_advance: 0.0355
max_extrude_cross_section: 15
max_temp: 310




#-------------------------#
#   Z MOTORS DIRECTION    #
#-------------------------#

## Here is an example of some overrides for the motor directions as it's a pretty common one. If you need
## to invert the Z1 or Z3 motor direction on your machine, just uncomment the following lines.

#[stepper_z2]

[stepper_z1]
dir_pin: !Z1_DIR

[stepper_z3]
dir_pin: !Z3_DIR

#[stepper_z]
#position_endstop: -1.90  #1.52

[stepper_z]
endstop_pin: probe:z_virtual_endstop # use beacon as virtual endstop
homing_retract_dist: 0 # beacon needs this to be set to 0

#-------------------------#
#   Probe Offsets         #
#-------------------------#


[include bedfans.cfg]
[include spoolman.cfg]



[quad_gantry_level]
horizontal_move_z: 6

[bed_mesh]
horizontal_move_z: 8
mesh_min:20,20
mesh_max:310,310
fade_end:10
fade_target:0
fade_start:1

[input_shaper]
shaper_freq_x: 50.2
shaper_freq_y: 39.2
shaper_type_x: mzv
shaper_type_y: zv
damping_ratio_x: 0.051
damping_ratio_y: 0.048


#[gcode_shell_command plot_graph]
#command: bash /home/edwards/printer_data/config/scripts/plot_graphs.sh


[gcode_shell_command system_info]
command: python3 /home/edwards/printer_data/config/scripts/system_info.py

[gcode_macro NOZZLE_PARK]
gcode:
  {% if "xyz" in printer.toolhead.homed_axes %}
    G90
    {% if printer.toolhead.position.x < 310 %}
      G1 X310 Y340 F25000
    {% else %}
      G1 X340 Y340 F25000
    {% endif %}
    G1 Y350 F25000
    G1 X325 F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}   

[idle_timeout]
gcode: 
    _HANDLE_TIMEOUT
timeout: 6000

[gcode_macro _HANDLE_TIMEOUT]
description: Called on idle timeout
gcode:
  {% if printer['print_stats'].state != "paused" %}
    TURN_OFF_HEATERS
    M84
  {% endif %}
  
[gcode_shell_command backup_cfg]
command: /usr/bin/bash /home/edwards/printer_data/config/autocommit.sh
timeout: 30
verbose: True

[gcode_macro BACKUP_CFG]
description: Backs up config directory GitHub
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg

[respond]
default_type: echo
default_prefix:

#[filament_switch_sensor RunoutSensor]
#pause_on_runout: True
#runout_gcode: PAUSE
#insert_gcode: RESUME
#switch_pin: !toolhead:MCU_HV_ENDSTOP

    